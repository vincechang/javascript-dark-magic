const INF=1/0,T=!0,F=!1,log=console.log,ff=(t,e,r=1)=>()=>{if("object"==typeof t){const o=t;t=len(o);for(let n=0;n<t;n+=r){const t=e(n,o[n]);if(void 0!==t)return t}}else for(let o=0;o<t;o+=r){const t=e(o);if(void 0!==t)return t}},f1=(t,e,r=1)=>()=>{if("object"==typeof t){const o=t;t=len(o);for(let n=1;n<=t;n+=r){const t=e(n,o[n]);if(void 0!==t)return t}}else for(let o=1;o<=t;o+=r){const t=e(o);if(void 0!==t)return t}},rr=(t,e,r=1)=>()=>{if("object"==typeof t){const o=t;for(let n=(t=len(o))-1;n>=0;n-=r){const t=e(n,o[n]);if(void 0!==t)return t}}else for(let o=t-1;o>=0;o-=r){const t=e(o);if(void 0!==t)return t}},r1=(t,e,r=1)=>()=>{if("object"==typeof t){const o=t;for(let n=t=len(o);n>=1;n-=r){const t=e(n,o[n]);if(void 0!==t)return t}}else for(let o=t;o>=1;o-=r){const t=e(o);if(void 0!==t)return t}},mmin=Math.min,mmax=Math.max,floor=Math.floor,ceil=Math.ceil,ga=(t,e)=>[...Array(t)].fill(e),gm=(t,e,r)=>[...Array(t)].map((()=>Array(e).fill(r))),asc=(t,e)=>t-e,dsc=(t,e)=>e-t;Array.prototype.sum=function(){return this.reduce(((t,e)=>t+e),0)},Array.prototype.top=function(){return this[this.length-1]};const DIRS=[[-1,0],[1,0],[0,-1],[0,1]];var len=t=>t.length??t.size,ctn=t=>t.charCodeAt(),ltn=t=>t.charCodeAt()-"a".charCodeAt(),utn=t=>t.charCodeAt()-"A".charCodeAt(),ntc=(...t)=>String.fromCharCode(...t),ntl=(...t)=>String.fromCharCode(...t.map((t=>t+cca("a")))),ntu=(...t)=>String.fromCharCode(...t.map((t=>t+cca("A")))),ent=t=>Object.entries(t);class Heap{constructor(t=((t,e)=>t-e)){this.items=[],this.compareFn=t}push(t){var{items:e,compareFn:r}=this;e.push(t);for(var o=e.length-1,n=Math.floor((o-1)/2);o>0&&r(e[o],e[n])<0;)[e[o],e[n]]=[e[n],e[o]],o=n,n=Math.floor((o-1)/2)}pop(){var{items:t,compareFn:e}=this;if(0!==t.length){[t[0],t[t.length-1]]=[t[t.length-1],t[0]];for(var r=t.pop(),o=0,n=o;o<t.length;){var i=2*o+1,c=i+1;if((i<t.length&&e(t[o],t[i])>0||c<t.length&&e(t[o],t[c])>0)&&(n=c<t.length?e(t[i],t[c])<0?i:c:i),n===o)break;[t[o],t[n]]=[t[n],t[o]],o=n}return r}}top(){return this.items[0]}size(){return this.items.length}}
